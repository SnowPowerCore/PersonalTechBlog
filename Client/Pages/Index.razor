@using PersonalTechBlog.Shared.Models
@using PersonalTechBlog.Client.Services.Article

@page "/"

@inject IArticlesService ArticlesService
@inject IStringLocalizer<AppResources> Localizer

<div>
    <div class="d-flex flex-column align-items-center">
        <span class="header-label">@Localizer["welcomeLabel"]</span>
    </div>
    @if (Articles.Count > 0)
    {
        <div class="d-flex flex-column align-items-center">
            @foreach (var article in Articles)
            {
                <div class="d-flex flex-column align-items-start w-75 bg-light" style="margin: 0.5rem;">
                    <label>@article.Title</label>
                    <label>@article.Content</label>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Article> Articles { get; set; } =
        new List<Article>();

    protected override Task OnInitializedAsync()
    {
        var updateDataTask = UpdateDataAsync();
        var initializeTask = base.OnInitializedAsync();
        return Task.WhenAll(updateDataTask, initializeTask);
    }

    private Task UpdateDataAsync() =>
        InvokeAsync(async () => Articles = await ArticlesService.GetArticlesAsync());
}